											Python教程
		Python可以开发的应用：网络应用，包括网站后台服务等等
							其次，是许多日常需要的小工具，包括系统管理员需要的脚本任务等
						缺点：运行速度慢，代码不能加密
1.安装Python
	windows下安装：Python解释器（负责运行Python程序的），命令交互，简单的集成开发环境
	安装完成后，在命令提示符中输入python
	我们下载安装好python2.7.11后，就直接获得了一个官方版本的解释器CPython
2.进入Python 
	>python
	>>>输入代码
  退出python：exit()
  运行hello.py文件 
    >python hello.py
  输出
	>print '123','345'
	字符串之间用‘,’隔开，‘,’会输出一个空格
  输入
    采用raw_input(),可以让用户输入字符串并放入一个变量里
	eg.
	>>>name=raw_input()  回车
	123
	>>>name
	'123'
	还可以通过>>>print name
				123
	也可以 >>>name=raw_input('提示的文字')
3.python基础
	1)以“#”开头是注释；
	2)当语句以：冒号结尾时，缩进的语句视为代码块
	注意:python程序是大小写敏感的，如果写错了大小写，程序会报错
	3)\n表示换行，\t表示制表符，用“\”转义
	4)采用r''表示引号内部的字符串默认不转义
	5)如果字符串内部有很多换行，python允许'''...'''这样的格式表示多行内容
	6)布尔值True和False,空值是python中的特殊的值，用None值表示
		None不能理解为0，因为0是有意义的，而None是一个特殊的空值
4.字符串和编码
	Unicode把所有语言都统一到一套编码里
	一般来说，两个字节表示一个字符
	Python的字符串，ord()和chr()把字母和数字相互转换
			eg. ord('A')->65
				chr(65)->A
	Python对Unicode的支持，采用U''表示
	把U'xxxx'转换成UTF-8编码，采用encode('utf-8')
		eg. U'中文'.encode('utf-8')		相反的使用decode
